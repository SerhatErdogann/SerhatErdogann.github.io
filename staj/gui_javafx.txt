import javafx.application.Application;
import javafx.application.Platform;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.stage.Stage;

import java.io.*;
import java.net.Socket;

public class MessagingSimulatorUI extends Application {

    private TextArea logArea;
    private TextField messageInput;
    private ComboBox<String> protocolSelector;

    private Socket tcpSocket;
    private BufferedReader reader;
    private BufferedWriter writer;

    private Thread receiveThread;

    public static void main(String[] args) {
        launch(args);
    }

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("TCP / UDP / Serial Messaging Simulator");

        // Mesaj kayÄ±tlarÄ±nÄ±n gÃ¶sterileceÄŸi alan
        logArea = new TextArea();
        logArea.setEditable(false);
        logArea.setWrapText(true);

        // KullanÄ±cÄ±nÄ±n mesaj gireceÄŸi alan
        messageInput = new TextField();
        messageInput.setPromptText("MesajÄ±nÄ±zÄ± girin...");

        // Protokol seÃ§imi (ÅŸimdilik sadece TCP Ã§alÄ±ÅŸÄ±yor)
        protocolSelector = new ComboBox<>();
        protocolSelector.getItems().addAll("TCP", "UDP", "Serial");
        protocolSelector.setValue("TCP");

        // Butonlar
        Button connectButton = new Button("BaÄŸlan");
        Button sendButton = new Button("GÃ¶nder");
        Button clearButton = new Button("Temizle");

        connectButton.setOnAction(e -> connectAction());
        sendButton.setOnAction(e -> sendAction());
        clearButton.setOnAction(e -> logArea.clear());

        // Ãœst kontrol alanÄ± (butonlar ve combo box)
        HBox topControls = new HBox(10, protocolSelector, connectButton, sendButton, clearButton);
        topControls.setPadding(new Insets(10));

        // Ana layout
        VBox root = new VBox(10, topControls, messageInput, logArea);
        root.setPadding(new Insets(10));

        Scene scene = new Scene(root, 600, 400);
        primaryStage.setScene(scene);
        primaryStage.show();

        // Uygulama kapatÄ±ldÄ±ÄŸÄ±nda kaynaklarÄ± temizle
        primaryStage.setOnCloseRequest(event -> {
            closeConnection();
        });
    }

    // BaÄŸlantÄ± kurma iÅŸlemi (ÅŸimdilik sadece TCP)
    private void connectAction() {
        String protocol = protocolSelector.getValue();

        if ("TCP".equals(protocol)) {
            try {
                // TCP soketini baÅŸlat (127.0.0.1:1234)
                tcpSocket = new Socket("127.0.0.1", 1234);
                reader = new BufferedReader(new InputStreamReader(tcpSocket.getInputStream()));
                writer = new BufferedWriter(new OutputStreamWriter(tcpSocket.getOutputStream()));

                log("[TCP] BaÄŸlantÄ± baÅŸarÄ±lÄ±.");

                // Gelen verileri dinlemek iÃ§in ayrÄ± bir thread baÅŸlat
                receiveThread = new Thread(() -> {
                    String line;
                    try {
                        while ((line = reader.readLine()) != null) {
                            String finalLine = line;
                            log("[Gelen - TCP] " + finalLine);
                        }
                    } catch (IOException e) {
                        log("âš  TCP okuma hatasÄ±: " + e.getMessage());
                    }
                });
                receiveThread.setDaemon(true); // JavaFX kapandÄ±ÄŸÄ±nda thread otomatik sonlanÄ±r
                receiveThread.start();

            } catch (IOException e) {
                log("âš  TCP baÄŸlantÄ±sÄ± baÅŸarÄ±sÄ±z: " + e.getMessage());
            }
        } else {
            log("âš  Bu sÃ¼rÃ¼mde sadece TCP destekleniyor.");
        }
    }

    // Mesaj gÃ¶nderme iÅŸlemi
    private void sendAction() {
        String message = messageInput.getText().trim();
        if (message.isEmpty()) {
            log("âš  Mesaj boÅŸ olamaz.");
            return;
        }

        String protocol = protocolSelector.getValue();

        if ("TCP".equals(protocol)) {
            if (writer == null) {
                log("âš  Ã–nce TCP baÄŸlantÄ±sÄ± kurmalÄ±sÄ±nÄ±z.");
                return;
            }
            try {
                // TCP mesaj gÃ¶nderme
                writer.write(message);
                writer.newLine(); // SatÄ±r sonu karakteri karÅŸÄ± tarafÄ±n readline() iÃ§in gerekli
                writer.flush();
                log("[GÃ¶nder - TCP] " + message);
                messageInput.clear();
            } catch (IOException e) {
                log("âš  TCP gÃ¶nderme hatasÄ±: " + e.getMessage());
            }
        } else {
            log("âš  Bu sÃ¼rÃ¼mde sadece TCP destekleniyor.");
        }
    }

    // Gelen/giden mesajlarÄ± GUI'de loglama
    private void log(String text) {
        Platform.runLater(() -> {
            logArea.appendText(text + "\n");
        });
    }

    // Uygulama kapanÄ±rken baÄŸlantÄ±yÄ± dÃ¼zgÃ¼n kapat
    private void closeConnection() {
        try {
            if (reader != null) reader.close();
            if (writer != null) writer.close();
            if (tcpSocket != null && !tcpSocket.isClosed()) tcpSocket.close();
            log("[TCP] BaÄŸlantÄ± kapatÄ±ldÄ±.");
        } catch (IOException e) {
            log("âš  BaÄŸlantÄ± kapatma hatasÄ±: " + e.getMessage());
        }
    }
}



-------------------------------
4. JavaFX SDK'yÄ± Projeye Ekle
Projeye saÄŸ tÄ±kla â†’ Build Path â†’ Configure Build Path

Sol menÃ¼de "Libraries" sekmesine tÄ±kla.

Add External JARs â†’ C:\javafx-sdk-21\lib\ iÃ§indeki tÃ¼m .jar dosyalarÄ±nÄ± seÃ§ ve ekle.

ArdÄ±ndan Apply and Close.

ğŸ§  3. VM Arguments Ayarla (Ã‡OK Ã–NEMLÄ°)
JavaFX modÃ¼llerini Eclipseâ€™e anlatmak iÃ§in ÅŸunu yap:

Run > Run Configurations menÃ¼sÃ¼ne git.

Sol menÃ¼den projenin Java Application kÄ±smÄ±nÄ± seÃ§ (oluÅŸturulmamÄ±ÅŸsa yeni bir tane ekle).

SaÄŸda "Arguments" sekmesine git.

VM Arguments kutusuna ÅŸunu yaz:
--module-path "C:\javafx-sdk-21\lib" --add-modules javafx.controls
--------------------------------
